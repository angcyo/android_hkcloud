package com.huika.cloud.support.db;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import com.huika.cloud.support.model.Province;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;


// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table Province.
*/
public class ProvinceDao extends AbstractDao<Province, Integer> {

	public static final String TABLENAME = "Province";

	/**
	 * Properties of entity Province.<br/>
	 * Can be used for QueryBuilder and for referencing column names.
	*/
	public static class Properties {
		public final static Property ProvinceID = new Property(0, int.class, "provinceID", true, "provinceID");
		public final static Property ProvinceName = new Property(1, String.class, "provinceName", false, "provinceName");
	};

	public ProvinceDao(DaoConfig config) {
		super(config);
	}

	public ProvinceDao(DaoConfig config, AddressDaoSession daoSession) {
		super(config, daoSession);
	}

	/** Creates the underlying database table. */
	public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
		String constraint = ifNotExists ? "IF NOT EXISTS " : "";
		db.execSQL("CREATE TABLE " + constraint + "'Province' (" + //
				"'provinceID' INTEGER PRIMARY KEY NOT NULL ," + // 0: provinceID
				"'provinceName' TEXT);"); // 1: provinceName
	}

	/** Drops the underlying database table. */
	public static void dropTable(SQLiteDatabase db, boolean ifExists) {
		String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'Province'";
		db.execSQL(sql);
	}

	/** @inheritdoc */
	@Override
	protected void bindValues(SQLiteStatement stmt, Province entity) {
		stmt.clearBindings();
		stmt.bindLong(1, entity.getProvinceID());

		String provinceName = entity.getProvinceName();
		if (provinceName != null) {
			stmt.bindString(2, provinceName);
		}
	}

	/** @inheritdoc */
	@Override
	public Integer readKey(Cursor cursor, int offset) {
		return cursor.getInt(offset + 0);
	}

	/** @inheritdoc */
	@Override
	public Province readEntity(Cursor cursor, int offset) {
		Province entity = new Province( //
				cursor.getInt(offset + 0), // provinceID
				cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1) // provinceName
		);
		return entity;
	}

	/** @inheritdoc */
	@Override
	public void readEntity(Cursor cursor, Province entity, int offset) {
		entity.setProvinceID(cursor.getInt(offset + 0));
		entity.setProvinceName(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
	}

	/** @inheritdoc */
	@Override
	protected Integer updateKeyAfterInsert(Province entity, long rowId) {
		return entity.getProvinceID();
	}

	/** @inheritdoc */
	@Override
	public Integer getKey(Province entity) {
		if (entity != null) {
			return entity.getProvinceID();
		}
		else {
			return null;
		}
	}

	/** @inheritdoc */
	@Override
	protected boolean isEntityUpdateable() {
		return true;
	}

}
